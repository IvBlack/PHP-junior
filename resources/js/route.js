var routes = require('./routes.json');

///route('home, ['1'])
export default function() {
    var args = Array.prototype.slice.call(arguments);
    var name = args.shift();

    //простая проверка на существование
    if(routes[name] === undefined) {
        console.log('Error');
    }else {
        return '/' +
            routes[name]
            .split('/')
            .map(function(str) {
                if(str[0] === '{') {
                    return args.shift();
                } else {
                    return str;
                }
            })
            .join('/');
            ;
    }
}

/*
    routes.json - наш массив с url-ами;
    arguments содержит все параметры, что передаются в функцию;
    конструкция Array.prototype.... позволяет работать с копией массива, не напрямую;
    модуль экспортируем как объект с параметрами: первый ао=ргумент - имя маршрута, второй - массив параметров в маршруте,
    например - id;
    var name хранит имя первого агрумента посредством метода shift(), т.е. наш маршрут;

    Проверка на существование:
        если нет такой ячейки в массиве, ошибку - в консоль, иначе
        у нас есть маршрут и мы можем использовать для возвращения его пути.
        routes[name] - обращение к элементу массива по ключу;
        split() - разбивает строку слэшем;
        map() формирует новый массив, метод первым аргументом принимает функцию;
        функция принимает строковое значение, т.е. элемент массива на каждой итерации цикла;


*/
